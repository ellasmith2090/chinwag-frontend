{"mappings":"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ACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEH,MAAM0D,aAAa1D,OAAO;QAC/B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEV,uDAAA;IACA,yDAAA;IACA,mDAAA;IACA,cAAA;IACO,MAAM2D,gBAAgB3D,OAAO;QAClC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEH,MAAM4D,WAAS5D,OAAO;QAC3B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEV,yDAAA;IACA,0CAAA;IACO,MAAM6D,mBAAmB7D,OAAO;QACrC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEH,MAAM8D,OAAO9D,OAAO;QAAC;KAAiB;ICpRtC,MAAM1L,OAAO0L,OAAO;QACzzL,MAAMyL,OAAO;QACxxB;QACA;QACA;QACA;QACA;KACQ;IChXV,gDAAA;IACO,MAAMgE,gBAAgB/D,KAAK,8BAA3B,+DAAA;IACA,MAAMgE,WAAWhE,KAAK;IACtB,MAAMiE,cAAcjE,KAAK,kBAAzB,2CAAA;IACA,MAAMkE,YAAYlE,KAAK,iCAAvB,wCAAA;IACA,MAAMmE,YAAYnE,KAAK,mBAAvB,wCAAA;IACA,MAAMoE,iBAAiBpE,KAC5B,mGADK,wCAAA;;IAGA,MAAMqE,oBAAoBrE,KAAK;IAC/B,M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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-848a345cac555240.js","src/main.js","src/App.js","src/Router.js","src/views/SignIn.js","node_modules/lit-html/lit-html.js","node_modules/lit-html/src/lit-html.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/Auth.js","src/Toast.js","src/views/SignUp.js","node_modules/dompurify/dist/purify.js","node_modules/dompurify/src/utils.ts","node_modules/dompurify/src/tags.ts","node_modules/dompurify/src/attrs.ts","node_modules/dompurify/src/regexp.ts","node_modules/dompurify/src/purify.ts","src/views/GuestGuide.js","src/views/HostGuide.js","src/views/Profile.js","src/components/Header.js","src/views/GuestHome.js","src/views/HostHome.js","src/views/GuestBookings.js","src/views/HostBookings.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"47f455d51fcc916e\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","//main.js\n\nimport \"./styles/main.scss\"; // Import SCSS for Parcel to bundle\nimport App from \"./App.js\";\n\n// Optional: show a quick loading message\ndocument.getElementById(\"root\").innerHTML = \"<p>Loading Chinwag...</p>\";\n\n// Initialize the app (includes routing)\nApp.init().catch((err) => {\n  document.getElementById(\"root\").innerHTML = `\n    <p style=\"color:red;\">App failed to load: ${err.message}</p>\n  `;\n  console.error(\"[main.js] App init failed:\", err);\n});\n","// App.js\nimport Router from \"./Router.js\";\n\nconst App = {\n  apiBase: process.env.API_BASE_URL || \"http://localhost:3000\",\n  rootEl: null,\n\n  async init() {\n    this.rootEl = document.getElementById(\"root\");\n    if (!this.rootEl) throw new Error(\"Root element #root not found\");\n\n    console.log(\"[App] Initialising...\");\n    await Router.init();\n  },\n};\n\nexport default App;\n","// router.js\n\nimport SignInView from \"./views/SignIn.js\";\nimport SignUpView from \"./views/SignUp.js\";\nimport GuestGuideView from \"./views/GuestGuide.js\";\nimport HostGuideView from \"./views/HostGuide.js\";\nimport ProfileView from \"./views/Profile.js\";\nimport GuestHomeView from \"./views/GuestHome.js\";\nimport HostHomeView from \"./views/HostHome.js\";\nimport GuestBookingsView from \"./views/GuestBookings.js\";\nimport HostBookingsView from \"./views/HostBookings.js\";\nimport Auth from \"./Auth.js\";\n\nconst Router = {\n  routes: {\n    \"/signin\": SignInView,\n    \"/signup\": SignUpView,\n    \"/guest-guide\": GuestGuideView,\n    \"/host-guide\": HostGuideView,\n    \"/profile\": ProfileView,\n    \"/guest-home\": GuestHomeView,\n    \"/host-home\": HostHomeView,\n    \"/guest-bookings\": GuestBookingsView,\n    \"/host-bookings\": HostBookingsView,\n  },\n  async init() {\n    window.addEventListener(\"popstate\", () => this.route());\n    await this.route();\n  },\n  async route() {\n    const path = window.location.pathname;\n    const view = this.routes[path] || SignInView;\n    const isAuthenticated = await Auth.check();\n\n    if (!isAuthenticated && ![\"/signin\", \"/signup\"].includes(path)) {\n      gotoRoute(\"/signin\");\n      return;\n    }\n\n    if (isAuthenticated) {\n      const { accessLevel } = Auth.currentUser;\n      if (path === \"/guest-guide\" && accessLevel !== 1) {\n        gotoRoute(\"/host-home\");\n        return;\n      }\n      if (path === \"/host-guide\" && accessLevel !== 2) {\n        gotoRoute(\"/guest-home\");\n        return;\n      }\n      if (path === \"/guest-home\" && accessLevel !== 1) {\n        gotoRoute(\"/host-home\");\n        return;\n      }\n      if (path === \"/host-home\" && accessLevel !== 2) {\n        gotoRoute(\"/guest-home\");\n        return;\n      }\n      if (path === \"/guest-bookings\" && accessLevel !== 1) {\n        gotoRoute(\"/host-home\");\n        return;\n      }\n      if (path === \"/host-bookings\" && accessLevel !== 2) {\n        gotoRoute(\"/guest-home\");\n        return;\n      }\n    }\n\n    view.init();\n    view.render();\n  },\n};\n\nexport function gotoRoute(path) {\n  if (process.env.NODE_ENV === \"development\") {\n    console.log(\"[Router] Navigating to:\", path);\n  }\n  history.pushState({}, \"\", path);\n  Router.route();\n}\n\nexport function anchorRoute(e) {\n  e.preventDefault();\n  const path = e.currentTarget.getAttribute(\"href\");\n  if (path) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(\"[Router] Anchor route to:\", path);\n    }\n    gotoRoute(path);\n  }\n}\n\nexport default Router;\n","// views/SignIn.js\n\nimport { html, render } from \"lit-html\";\nimport App from \"../App.js\";\nimport Auth from \"../Auth.js\";\nimport { gotoRoute, anchorRoute } from \"../Router.js\";\nimport Toast from \"../Toast.js\";\n\nclass SignInView {\n  constructor() {\n    this.loading = false;\n  }\n\n  init() {\n    document.title = \"Sign In - Chinwag\";\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(\"[SignInView] init() called\");\n    }\n    this.render();\n  }\n\n  async submitHandler(e) {\n    e.preventDefault();\n    if (this.loading) return;\n    this.loading = true;\n    this.render();\n\n    const form = e.target;\n    const email = form.querySelector('[name=\"email\"]').value.trim();\n    const password = form.querySelector('[name=\"password\"]').value;\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      Toast.show(\"⚠️ Please enter a valid email address.\", \"warning\");\n      this.loading = false;\n      this.render();\n      return;\n    }\n\n    try {\n      await Auth.signIn({ email, password });\n      Toast.show(\"✅ Signed in successfully!\", \"success\");\n\n      const user = Auth.currentUser;\n      if (user.isFirstLogin) {\n        gotoRoute(user.accessLevel === 1 ? \"/guest-guide\" : \"/host-guide\");\n      } else {\n        gotoRoute(user.accessLevel === 1 ? \"/guest-home\" : \"/host-home\");\n      }\n    } catch (err) {\n      this.loading = false;\n      if (process.env.NODE_ENV === \"development\") {\n        console.error(\"[SignInView] Login error:\", err);\n      }\n      if (err.status === 404) {\n        Toast.show(\"No account found. Redirecting to Sign Up...\", \"warning\");\n        setTimeout(() => gotoRoute(\"/signup\"), 2000);\n      } else if (err.status === 401) {\n        Toast.show(\"Incorrect password. Please try again.\", \"warning\");\n      } else {\n        Toast.show(\n          `❌ Login failed: ${err.message || \"Unknown error\"}`,\n          \"danger\"\n        );\n      }\n      this.render();\n    }\n  }\n\n  render() {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(\"[SignInView] render() called\");\n    }\n    const template = html`\n      <div class=\"page-content page-centered\" role=\"main\">\n        <h1>Sign In</h1>\n        <div class=\"form-wrapper\" aria-label=\"Sign In Form\">\n          <form @submit=${this.submitHandler.bind(this)}>\n            <sl-input\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              required\n              aria-required=\"true\"\n              autocomplete=\"email\"\n            ></sl-input>\n            <sl-input\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              required\n              aria-required=\"true\"\n              autocomplete=\"current-password\"\n            ></sl-input>\n            <sl-button\n              type=\"submit\"\n              variant=\"primary\"\n              class=\"primary\"\n              ?disabled=${this.loading}\n              ?loading=${this.loading}\n              aria-label=\"Submit Sign In\"\n            >\n              Sign In\n            </sl-button>\n          </form>\n          <p>\n            Don't have an account?\n            <a href=\"/signup\" @click=${anchorRoute} aria-label=\"Go to Sign Up\">\n              Sign Up\n            </a>\n          </p>\n        </div>\n      </div>\n    `;\n    render(template, App.rootEl);\n  }\n}\n\nexport default new SignInView();\n",null,"/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\nimport type {TrustedHTML, TrustedTypesWindow} from 'trusted-types/lib/index.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (\n      !global.litIssuedWarnings!.has(warning) &&\n      !global.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  queueMicrotask(() => {\n    issueWarning(\n      'dev-mode',\n      `Lit is in dev mode. Not recommended for production!`\n    );\n  });\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? (global.ShadyDOM!.wrap as <T extends Node>(node: T) => T)\n    : <T extends Node>(node: T) => node;\n\nconst trustedTypes = (global as unknown as TrustedTypesWindow).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${Math.random().toFixed(9).slice(2)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\nconst MATHML_RESULT = 3;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT | typeof MATHML_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg} when it hasn't been compiled by @lit-labs/compiler.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type UncompiledTemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\n/**\n * This is a template result that may be either uncompiled or compiled.\n *\n * In the future, TemplateResult will be this type. If you want to explicitly\n * note that a template result is potentially compiled, you can reference this\n * type and it will continue to behave the same through the next major version\n * of Lit. This can be useful for code that wants to prepare for the next\n * major version of Lit.\n */\nexport type MaybeCompiledTemplateResult<T extends ResultType = ResultType> =\n  | UncompiledTemplateResult<T>\n  | CompiledTemplateResult;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n * In Lit 4, this type will be an alias of\n * MaybeCompiledTemplateResult, so that code will get type errors if it assumes\n * that Lit templates are not compiled. When deliberately working with only\n * one, use either {@linkcode CompiledTemplateResult} or\n * {@linkcode UncompiledTemplateResult} explicitly.\n */\nexport type TemplateResult<T extends ResultType = ResultType> =\n  UncompiledTemplateResult<T>;\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport type MathMLTemplateResult = TemplateResult<typeof MATHML_RESULT>;\n\n/**\n * A TemplateResult that has been compiled by @lit-labs/compiler, skipping the\n * prepare step.\n */\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    if (DEV_MODE) {\n      // Import static-html.js results in a circular dependency which g3 doesn't\n      // handle. Instead we know that static values must have the field\n      // `_$litStatic$`.\n      if (\n        values.some((val) => (val as {_$litStatic$: unknown})?.['_$litStatic$'])\n      ) {\n        issueWarning(\n          '',\n          `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.\\n` +\n            `Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`\n        );\n      }\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus not be properly contained within an `<svg>` HTML\n * element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const num = mathml`<mn>1</mn>`;\n *\n * const eq = html`\n *   <math>\n *     ${num}\n *   </math>`;\n * ```\n *\n * The `mathml` *tag function* should only be used for MathML fragments, or\n * elements that would be contained **inside** a `<math>` HTML element. A common\n * error is placing a `<math>` *element* in a template tagged with the `mathml`\n * tag function. The `<math>` element is an HTML element and should be used\n * within a template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an MathML fragment from the\n * `render()` method, as the MathML fragment will be contained within the\n * element's shadow root and thus not be properly contained within a `<math>`\n * HTML element.\n */\nexport const mathml = tag(MATHML_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - they must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string> = [];\n  let html =\n    type === SVG_RESULT ? '<svg>' : type === MATHML_RESULT ? '<math>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n                ? doubleQuoteAttrEndRegex\n                : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n          ? (attrNames.push(attrName!),\n            s.slice(0, attrNameEndIndex) +\n              boundAttributeSuffix +\n              s.slice(attrNameEndIndex)) +\n            marker +\n            end\n          : s + marker + (attrNameEndIndex === -2 ? i : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html +\n    (strings[l] || '<?>') +\n    (type === SVG_RESULT ? '</svg>' : type === MATHML_RESULT ? '</math>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: UncompiledTemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Re-parent SVG or MathML nodes into template root\n    if (type === SVG_RESULT || type === MATHML_RESULT) {\n      const wrapper = this.el.content.firstChild!;\n      wrapper.replaceWith(...wrapper.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          for (const name of (node as Element).getAttributeNames()) {\n            if (name.endsWith(boundAttributeSuffix)) {\n              const realName = attrNames[attrNameIndex++];\n              const value = (node as Element).getAttribute(name)!;\n              const statics = value.split(marker);\n              const m = /([.?@])?(.*)/.exec(realName)!;\n              parts.push({\n                type: ATTRIBUTE_PART,\n                index: nodeIndex,\n                name: m[2],\n                strings: statics,\n                ctor:\n                  m[1] === '.'\n                    ? PropertyPart\n                    : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                        ? EventPart\n                        : AttributePart,\n              });\n              (node as Element).removeAttribute(name);\n            } else if (name.startsWith(marker)) {\n              parts.push({\n                type: ELEMENT_PART,\n                index: nodeIndex,\n              });\n              (node as Element).removeAttribute(name);\n            }\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for child parts\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n\n    if (DEV_MODE) {\n      // If there was a duplicate attribute on a tag, then when the tag is\n      // parsed into an element the attribute gets de-duplicated. We can detect\n      // this mismatch if we haven't precisely consumed every attribute name\n      // when preparing the template. This works because `attrNames` is built\n      // from the template string and `attrNameIndex` comes from processing the\n      // resulting DOM.\n      if (attrNames.length !== attrNameIndex) {\n        throw new Error(\n          `Detected duplicate attribute bindings. This occurs if your template ` +\n            `has duplicate attributes on an element tag. For example ` +\n            `\"<input ?disabled=\\${true} ?disabled=\\${false}>\" contains a ` +\n            `duplicate \"disabled\" attribute. The error was detected in ` +\n            `the following template: \\n` +\n            '`' +\n            strings.join('${...}') +\n            '`'\n        );\n      }\n    }\n\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'template prep',\n        template: this,\n        clonableTemplate: this.el,\n        parts: this.parts,\n        strings,\n      });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'set part',\n            part,\n            value: values[i],\n            valueIndex: i,\n            values,\n            templateInstance: this,\n          });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unused otherwise. The\n   * intention would be clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent &&\n            debugLogEvent({\n              kind: 'commit nothing to child',\n              start: this._$startNode,\n              end: this._$endNode,\n              parent: this._$parent,\n              options: this.options,\n            });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit node',\n          start: this._$startNode,\n          parent: this._$parent,\n          value: value,\n          options: this.options,\n        });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit text',\n          node,\n          value,\n          options: this.options,\n        });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: textNode,\n            value,\n            options: this.options,\n          });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: wrap(this._$startNode).nextSibling as Text,\n            value,\n            options: this.options,\n          });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as UncompiledTemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template updating',\n          template,\n          instance: this._$committedValue as TemplateInstance,\n          parts: (this._$committedValue as TemplateInstance)._$parts,\n          options: this.options,\n          values,\n        });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      instance._update(values);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated and updated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: UncompiledTemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this method\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type:\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART = ATTRIBUTE_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit attribute',\n          element: this.element,\n          name: this.name,\n          value,\n          options: this.options,\n        });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit property',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit boolean attribute',\n        element: this.element,\n        name: this.name,\n        value: !!(value && value !== nothing),\n        options: this.options,\n      });\n    (wrap(this.element) as Element).toggleAttribute(\n      this.name,\n      !!value && value !== nothing\n    );\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit event listener',\n        element: this.element,\n        name: this.name,\n        value: newListener,\n        options: this.options,\n        removeListener: shouldRemoveListener,\n        addListener: shouldAddListener,\n        oldListener,\n      });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit to element binding',\n        element: this.element,\n        value,\n        options: this.options,\n      });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.3.0');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  queueMicrotask(() => {\n    issueWarning!(\n      'multiple-versions',\n      `Multiple versions of Lit loaded. ` +\n        `Loading multiple versions is not recommended.`\n    );\n  });\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'begin render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'end render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// Auth.js\n\n// Auth.js\n\nimport { gotoRoute } from \"./Router.js\";\nimport Toast from \"./Toast.js\";\nimport App from \"./App.js\";\n\nconst Auth = {\n  currentUser: null,\n\n  async signIn({ email, password }) {\n    try {\n      const response = await fetch(`${App.apiBase}/api/auth/signin`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Sign-in failed\");\n      }\n\n      const { accessToken, user } = await response.json();\n      localStorage.setItem(\"token\", accessToken);\n      this.currentUser = user;\n\n      Toast.show(`Welcome back, ${user.firstName}!`);\n\n      const redirectPath = user.isFirstLogin\n        ? user.accessLevel === 1\n          ? \"/guest-guide\"\n          : \"/host-guide\"\n        : user.accessLevel === 1\n        ? \"/guest-home\"\n        : \"/host-home\";\n\n      gotoRoute(redirectPath);\n    } catch (err) {\n      Toast.show(\n        err.message || \"Failed to sign in. Please check your connection.\"\n      );\n      console.error(\"[Auth] signIn failed:\", err);\n      throw err;\n    }\n  },\n\n  async signUp({ firstName, lastName, email, password, accessLevel }) {\n    try {\n      const response = await fetch(`${App.apiBase}/api/users`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          firstName,\n          lastName,\n          email,\n          password,\n          accessLevel,\n        }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Sign-up failed\");\n      }\n\n      Toast.show(\"Account created! Please sign in.\");\n      gotoRoute(\"/signin\");\n    } catch (err) {\n      Toast.show(\n        err.message || \"Failed to sign up. Please check your connection.\"\n      );\n      console.error(\"[Auth] signUp failed:\", err);\n      throw err;\n    }\n  },\n\n  async check() {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      this.currentUser = null;\n      return false;\n    }\n\n    try {\n      const response = await fetch(`${App.apiBase}/api/auth/validate`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Invalid token\");\n      }\n\n      this.currentUser = (await response.json()).user;\n      return true;\n    } catch (err) {\n      console.warn(\"[Auth] Session check failed:\", err.message);\n      localStorage.removeItem(\"token\");\n      this.currentUser = null;\n      return false;\n    }\n  },\n\n  signOut() {\n    localStorage.removeItem(\"token\");\n    this.currentUser = null;\n    Toast.show(\"Signed out successfully\");\n    gotoRoute(\"/signin\");\n  },\n};\n\nexport default Auth;\n",null,"// views/signup.js\n\nimport { html, render } from \"lit-html\";\nimport App from \"../App.js\";\nimport Auth from \"../Auth.js\";\nimport { gotoRoute } from \"../Router.js\";\nimport Toast from \"../Toast.js\";\nimport DOMPurify from \"dompurify\";\n\nclass SignUpView {\n  constructor() {\n    this.loading = false;\n    this.passwordMismatch = false;\n  }\n\n  init() {\n    document.title = \"Sign Up - Chinwag\";\n    this.render();\n  }\n\n  async submitHandler(e) {\n    e.preventDefault();\n    if (this.loading) return;\n    this.loading = true;\n    this.passwordMismatch = false;\n\n    const form = e.target;\n    const firstName = DOMPurify.sanitize(\n      form.querySelector('[name=\"firstName\"]').value.trim()\n    );\n    const lastName = DOMPurify.sanitize(\n      form.querySelector('[name=\"lastName\"]').value.trim()\n    );\n    const email = DOMPurify.sanitize(\n      form.querySelector('[name=\"email\"]').value.trim()\n    );\n    const password = form.querySelector('[name=\"password\"]').value;\n    const confirmPassword = form.querySelector(\n      '[name=\"confirmPassword\"]'\n    ).value;\n    const accessLevel = parseInt(\n      form.querySelector('[name=\"accessLevel\"]').value\n    );\n\n    if (password !== confirmPassword) {\n      this.passwordMismatch = true;\n      this.loading = false;\n      this.render();\n      Toast.show(\"Passwords do not match\");\n      return;\n    }\n\n    try {\n      await Auth.signUp({ firstName, lastName, email, password, accessLevel });\n      this.loading = false;\n      this.render();\n    } catch (err) {\n      this.loading = false;\n      this.render();\n    }\n  }\n\n  render() {\n    const template = html`\n      <div class=\"page-content page-centered\" role=\"main\">\n        <h1>Create Your Account</h1>\n        <div class=\"form-wrapper\" aria-label=\"Sign Up Form\">\n          <form @submit=${this.submitHandler.bind(this)}>\n            <sl-input\n              name=\"firstName\"\n              label=\"First Name\"\n              required\n              aria-required=\"true\"\n              autocomplete=\"given-name\"\n            ></sl-input>\n            <sl-input\n              name=\"lastName\"\n              label=\"Last Name\"\n              required\n              aria-required=\"true\"\n              autocomplete=\"family-name\"\n            ></sl-input>\n            <sl-input\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              required\n              aria-required=\"true\"\n              autocomplete=\"email\"\n            ></sl-input>\n            <sl-input\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              required\n              aria-required=\"true\"\n              autocomplete=\"new-password\"\n              help-text=${this.passwordMismatch ? \"Passwords do not match\" : \"\"}\n              ?invalid=${this.passwordMismatch}\n            ></sl-input>\n            <sl-input\n              name=\"confirmPassword\"\n              type=\"password\"\n              label=\"Confirm Password\"\n              required\n              aria-required=\"true\"\n              autocomplete=\"new-password\"\n              help-text=${this.passwordMismatch ? \"Passwords do not match\" : \"\"}\n              ?invalid=${this.passwordMismatch}\n            ></sl-input>\n            <sl-radio-group\n              name=\"accessLevel\"\n              label=\"Register as\"\n              required\n              aria-required=\"true\"\n              value=\"1\"\n            >\n              <sl-radio value=\"1\">Guest</sl-radio>\n              <sl-radio value=\"2\">Host</sl-radio>\n            </sl-radio-group>\n            <sl-button\n              type=\"submit\"\n              variant=\"primary\"\n              ?disabled=${this.loading}\n              ?loading=${this.loading}\n            >\n              Sign Up\n            </sl-button>\n          </form>\n          <p>\n            Already have an account?\n            <a\n              href=\"/signin\"\n              @click=${(e) => {\n                e.preventDefault();\n                gotoRoute(\"/signin\");\n              }}\n              aria-label=\"Go to Sign In\"\n            >\n              Sign In\n            </a>\n          </p>\n        </div>\n      </div>\n    `;\n    render(template, App.rootEl);\n  }\n}\n\nexport default new SignUpView();\n",null,"const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\nconst arraySplice = unapply(Array.prototype.splice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply<T>(\n  func: (thisArg: any, ...args: any[]) => T\n): (thisArg: any, ...args: any[]) => T {\n  return (thisArg: any, ...args: any[]): T => {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct<T>(func: (...args: any[]) => T): (...args: any[]) => T {\n  return (...args: any[]): T => construct(func, args);\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(\n  set: Record<string, any>,\n  array: readonly any[],\n  transformCaseFunc: ReturnType<typeof unapply<string>> = stringToLowerCase\n): Record<string, any> {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          (array as any[])[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray<T>(array: T[]): Array<T | null> {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone<T extends Record<string, any>>(object: T): T {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (\n        value &&\n        typeof value === 'object' &&\n        value.constructor === Object\n      ) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter<T extends Record<string, any>>(\n  object: T,\n  prop: string\n): ReturnType<typeof unapply<any>> | (() => null) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(): null {\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayLastIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  arraySplice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  clone,\n  create,\n  objectHasOwnProperty,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n  addToSet,\n  // Reflect\n  unapply,\n  unconstruct,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n] as const);\n\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n] as const);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n] as const);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n] as const);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n] as const);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n] as const);\n\nexport const text = freeze(['#text'] as const);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'popover',\n  'popovertarget',\n  'popovertargetaction',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'wrap',\n  'xmlns',\n  'slot',\n] as const);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'amplitude',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'exponent',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'intercept',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'slope',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'tablevalues',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n] as const);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n] as const);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\nexport const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n","/* eslint-disable @typescript-eslint/indent */\n\nimport type { TrustedHTML, TrustedTypesWindow } from 'trusted-types/lib';\nimport type { Config, UseProfilesConfig } from './config';\nimport * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayLastIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySplice,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n  create,\n  objectHasOwnProperty,\n} from './utils.js';\n\nexport type { Config } from './config';\n\ndeclare const VERSION: string;\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5, // Deprecated\n  entityNode: 6, // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12, // Deprecated\n};\n\nconst getGlobal = function (): WindowLike {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function (\n  trustedTypes: TrustedTypePolicyFactory,\n  purifyHostElement: HTMLScriptElement\n) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nconst _createHooksMap = function (): HooksMap {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: [],\n  };\n};\n\nfunction createDOMPurify(window: WindowLike = getGlobal()): DOMPurify {\n  const DOMPurify: DOMPurify = (root: WindowLike) => createDOMPurify(root);\n\n  DOMPurify.version = VERSION;\n\n  DOMPurify.removed = [];\n\n  if (\n    !window ||\n    !window.document ||\n    window.document.nodeType !== NODE_TYPE.document ||\n    !window.Element\n  ) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  let { document } = window;\n\n  const originalDocument = document;\n  const currentScript: HTMLScriptElement =\n    originalDocument.currentScript as HTMLScriptElement;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || (window as any).MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = _createHooksMap();\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES: UseProfilesConfig | false = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE: null | DOMParserSupportedType = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc: null | Parameters<typeof addToSet>[2] = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG: Config | null = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (\n    testValue: unknown\n  ): testValue is Function | RegExp {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg: Config = {}): void {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? DEFAULT_PARSER_MEDIA_TYPE\n        : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS')\n      ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n      : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR')\n      ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n      : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES')\n      ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n      : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR')\n      ? addToSet(\n          clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n          cfg.ADD_URI_SAFE_ATTR,\n          transformCaseFunc\n        )\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS')\n      ? addToSet(\n          clone(DEFAULT_DATA_URI_TAGS),\n          cfg.ADD_DATA_URI_TAGS,\n          transformCaseFunc\n        )\n      : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS')\n      ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n      : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS')\n      ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n      : clone({});\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR')\n      ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n      : clone({});\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES')\n      ? cfg.USE_PROFILES\n      : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS =\n      cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS =\n      cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, TAGS.text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.'\n        );\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.'\n        );\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(\n          trustedTypes,\n          currentScript\n        );\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.svgDisallowed,\n  ]);\n  const ALL_MATHML_TAGS = addToSet({}, [\n    ...TAGS.mathMl,\n    ...TAGS.mathMlDisallowed,\n  ]);\n\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element: Element): boolean {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function (node: Node): void {\n    arrayPush(DOMPurify.removed, { element: node });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function (name: string, element: Element): void {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element,\n      });\n    }\n\n    element.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty: string): Document {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function (root: Node): NodeIterator {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT |\n        NodeFilter.SHOW_COMMENT |\n        NodeFilter.SHOW_TEXT |\n        NodeFilter.SHOW_PROCESSING_INSTRUCTION |\n        NodeFilter.SHOW_CDATA_SECTION,\n      null\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function (element: Element): boolean {\n    return (\n      element instanceof HTMLFormElement &&\n      (typeof element.nodeName !== 'string' ||\n        typeof element.textContent !== 'string' ||\n        typeof element.removeChild !== 'function' ||\n        !(element.attributes instanceof NamedNodeMap) ||\n        typeof element.removeAttribute !== 'function' ||\n        typeof element.setAttribute !== 'function' ||\n        typeof element.namespaceURI !== 'string' ||\n        typeof element.insertBefore !== 'function' ||\n        typeof element.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function (value: unknown): value is Node {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n\n  function _executeHooks<\n    T extends\n      | NodeHook\n      | ElementHook\n      | DocumentFragmentHook\n      | UponSanitizeElementHook\n      | UponSanitizeAttributeHook\n  >(hooks: T[], currentNode: Parameters<T>[0], data: Parameters<T>[1]): void {\n    arrayForEach(hooks, (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode: any): boolean {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      SAFE_FOR_XML &&\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      regExpTest(/<[/\\w!]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w!]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any kind of possibly harmful comments */\n    if (\n      SAFE_FOR_XML &&\n      currentNode.nodeType === NODE_TYPE.comment &&\n      regExpTest(/<[/\\w]/g, currentNode.data)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        ) {\n          return false;\n        }\n\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        ) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        content = stringReplace(content, expr, ' ');\n      });\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (\n    lcTag: string,\n    lcName: string,\n    value: string\n  ): boolean {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_isBasicCustomElement(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function (tagName: string): RegExpMatchArray {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode: Element): void {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined,\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const { name, namespaceURI, value: attrValue } = attr;\n      const lcName = transformCaseFunc(name);\n\n      const initValue = attrValue;\n      let value = name === 'value' ? initValue : stringTrim(initValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      if (value !== initValue) {\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {\n          _removeAttribute(name, currentNode);\n        }\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment: DocumentFragment): void {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if ((dirty as Node).nodeName) {\n        const tagName = transformCaseFunc((dirty as Node).nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (\n        importedNode.nodeType === NODE_TYPE.element &&\n        importedNode.nodeName === 'BODY'\n      ) {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  DOMPurify.setConfig = function (cfg = {}) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n\n      return index === -1\n        ? undefined\n        : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n\n    return arrayPop(hooks[entryPoint]);\n  };\n\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n\nexport interface DOMPurify {\n  /**\n   * Creates a DOMPurify instance using the given window-like object. Defaults to `window`.\n   */\n  (root?: WindowLike): DOMPurify;\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  version: string;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  removed: Array<RemovedElement | RemovedAttribute>;\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  isSupported: boolean;\n\n  /**\n   * Set the configuration once.\n   *\n   * @param cfg configuration object\n   */\n  setConfig(cfg?: Config): void;\n\n  /**\n   * Removes the configuration.\n   */\n  clearConfig(): void;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized TrustedHTML.\n   */\n  sanitize(\n    dirty: string | Node,\n    cfg: Config & { RETURN_TRUSTED_TYPE: true }\n  ): TrustedHTML;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty DOM node\n   * @param cfg object\n   * @returns Sanitized DOM node.\n   */\n  sanitize(dirty: Node, cfg: Config & { IN_PLACE: true }): Node;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized DOM node.\n   */\n  sanitize(dirty: string | Node, cfg: Config & { RETURN_DOM: true }): Node;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized document fragment.\n   */\n  sanitize(\n    dirty: string | Node,\n    cfg: Config & { RETURN_DOM_FRAGMENT: true }\n  ): DocumentFragment;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized string.\n   */\n  sanitize(dirty: string | Node, cfg?: Config): string;\n\n  /**\n   * Checks if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   *\n   * @param tag Tag name of containing element.\n   * @param attr Attribute name.\n   * @param value Attribute value.\n   * @returns Returns true if `value` is valid. Otherwise, returns false.\n   */\n  isValidAttribute(tag: string, attr: string, value: string): boolean;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(entryPoint: BasicHookName, hookFunction: NodeHook): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(entryPoint: ElementHookName, hookFunction: ElementHook): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: DocumentFragmentHookName,\n    hookFunction: DocumentFragmentHook\n  ): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: 'uponSanitizeElement',\n    hookFunction: UponSanitizeElementHook\n  ): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: 'uponSanitizeAttribute',\n    hookFunction: UponSanitizeAttributeHook\n  ): void;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: BasicHookName,\n    hookFunction?: NodeHook\n  ): NodeHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: ElementHookName,\n    hookFunction?: ElementHook\n  ): ElementHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: DocumentFragmentHookName,\n    hookFunction?: DocumentFragmentHook\n  ): DocumentFragmentHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: 'uponSanitizeElement',\n    hookFunction?: UponSanitizeElementHook\n  ): UponSanitizeElementHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: 'uponSanitizeAttribute',\n    hookFunction?: UponSanitizeAttributeHook\n  ): UponSanitizeAttributeHook | undefined;\n\n  /**\n   * Removes all DOMPurify hooks at a given entryPoint\n   *\n   * @param entryPoint entry point for the hooks to remove\n   */\n  removeHooks(entryPoint: HookName): void;\n\n  /**\n   * Removes all DOMPurify hooks.\n   */\n  removeAllHooks(): void;\n}\n\n/**\n * An element removed by DOMPurify.\n */\nexport interface RemovedElement {\n  /**\n   * The element that was removed.\n   */\n  element: Node;\n}\n\n/**\n * An element removed by DOMPurify.\n */\nexport interface RemovedAttribute {\n  /**\n   * The attribute that was removed.\n   */\n  attribute: Attr | null;\n\n  /**\n   * The element that the attribute was removed.\n   */\n  from: Node;\n}\n\ntype BasicHookName =\n  | 'beforeSanitizeElements'\n  | 'afterSanitizeElements'\n  | 'uponSanitizeShadowNode';\ntype ElementHookName = 'beforeSanitizeAttributes' | 'afterSanitizeAttributes';\ntype DocumentFragmentHookName =\n  | 'beforeSanitizeShadowDOM'\n  | 'afterSanitizeShadowDOM';\ntype UponSanitizeElementHookName = 'uponSanitizeElement';\ntype UponSanitizeAttributeHookName = 'uponSanitizeAttribute';\n\ninterface HooksMap {\n  beforeSanitizeElements: NodeHook[];\n  afterSanitizeElements: NodeHook[];\n  beforeSanitizeShadowDOM: DocumentFragmentHook[];\n  uponSanitizeShadowNode: NodeHook[];\n  afterSanitizeShadowDOM: DocumentFragmentHook[];\n  beforeSanitizeAttributes: ElementHook[];\n  afterSanitizeAttributes: ElementHook[];\n  uponSanitizeElement: UponSanitizeElementHook[];\n  uponSanitizeAttribute: UponSanitizeAttributeHook[];\n}\n\nexport type HookName =\n  | BasicHookName\n  | ElementHookName\n  | DocumentFragmentHookName\n  | UponSanitizeElementHookName\n  | UponSanitizeAttributeHookName;\n\nexport type NodeHook = (\n  this: DOMPurify,\n  currentNode: Node,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type ElementHook = (\n  this: DOMPurify,\n  currentNode: Element,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type DocumentFragmentHook = (\n  this: DOMPurify,\n  currentNode: DocumentFragment,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type UponSanitizeElementHook = (\n  this: DOMPurify,\n  currentNode: Node,\n  hookEvent: UponSanitizeElementHookEvent,\n  config: Config\n) => void;\n\nexport type UponSanitizeAttributeHook = (\n  this: DOMPurify,\n  currentNode: Element,\n  hookEvent: UponSanitizeAttributeHookEvent,\n  config: Config\n) => void;\n\nexport interface UponSanitizeElementHookEvent {\n  tagName: string;\n  allowedTags: Record<string, boolean>;\n}\n\nexport interface UponSanitizeAttributeHookEvent {\n  attrName: string;\n  attrValue: string;\n  keepAttr: boolean;\n  allowedAttributes: Record<string, boolean>;\n  forceKeepAttr: boolean | undefined;\n}\n\n/**\n * A `Window`-like object containing the properties and types that DOMPurify requires.\n */\nexport type WindowLike = Pick<\n  typeof globalThis,\n  | 'DocumentFragment'\n  | 'HTMLTemplateElement'\n  | 'Node'\n  | 'Element'\n  | 'NodeFilter'\n  | 'NamedNodeMap'\n  | 'HTMLFormElement'\n  | 'DOMParser'\n> & {\n  document?: Document;\n  MozNamedAttrMap?: typeof window.NamedNodeMap;\n} & Pick<TrustedTypesWindow, 'trustedTypes'>;\n","// views/GuestGuide.js\n\nimport { html, render } from \"lit-html\";\nimport App from \"../App.js\";\nimport Auth from \"../Auth.js\";\nimport { gotoRoute } from \"../Router.js\";\nimport Toast from \"../Toast.js\";\nimport DOMPurify from \"dompurify\";\n\nclass GuestGuideView {\n  async init() {\n    document.title = \"Welcome to Chinwag - Guest\";\n    if (!Auth.currentUser || Auth.currentUser.accessLevel !== 1) {\n      gotoRoute(\"/signin\");\n      return;\n    }\n    this.render();\n  }\n\n  async handleGetStarted() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        `${App.apiBase}/users/${Auth.currentUser.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ isFirstLogin: false }),\n        }\n      );\n      if (!response.ok) throw new Error(\"Failed to update user\");\n      Auth.currentUser.isFirstLogin = false;\n      gotoRoute(\"/guest-home\");\n    } catch (err) {\n      Toast.show(\"Error getting started\");\n      console.error(err);\n    }\n  }\n\n  render() {\n    const template = html`\n      <div class=\"guide-page\">\n        <div\n          class=\"guide-header\"\n          style=\"background-image: url('/images/guide-header.png')\"\n        ></div>\n        <div class=\"guide-content\">\n          <div class=\"guide-text-block\">\n            <h1 class=\"guide-title\">Welcome!</h1>\n            <p class=\"guide-subtitle\">\n              ${DOMPurify.sanitize(\n                \"We’re so glad you’re here. Chinwag connects people who crave meaningful, in-person experiences over a shared meal — no awkward planning or group chats required.\"\n              )}\n            </p>\n            <h2 class=\"guide-heading\">What is Chinwag?</h2>\n            <p class=\"guide-text\">\n              ${DOMPurify.sanitize(\n                \"Chinwag helps you find and join communal dining tables hosted at local cafes and restaurants. Whether you’re new in town or just want to shake up your social routine, Chinwag makes it easy to connect — no algorithms or matching required.\"\n              )}\n            </p>\n          </div>\n          <div class=\"guide-features\">\n            <sl-card class=\"guide-card\">\n              <h4>🍽️ Meet new people</h4>\n              <p>No planning, no pressure — just show up.</p>\n            </sl-card>\n            <sl-card class=\"guide-card\">\n              <h4>🗓️ Spontaneous plans</h4>\n              <p>Join an event tonight or this weekend.</p>\n            </sl-card>\n            <sl-card class=\"guide-card\">\n              <h4>🧭 The unexpected</h4>\n              <p>Discover great venues and better convo.</p>\n            </sl-card>\n          </div>\n          <div class=\"guide-cta\">\n            <sl-button\n              variant=\"primary\"\n              size=\"large\"\n              @click=${this.handleGetStarted.bind(this)}\n              aria-label=\"Get Started as a Guest\"\n            >\n              Get Started\n            </sl-button>\n          </div>\n        </div>\n        <div\n          class=\"guide-footer\"\n          style=\"background-image: url('/images/guide-footer.png')\"\n        ></div>\n      </div>\n    `;\n    render(template, App.rootEl);\n  }\n}\n\nexport default new GuestGuideView();\n","// views/HostGuide.js\n\nimport { html, render } from \"lit-html\";\nimport App from \"../App.js\";\nimport Auth from \"../Auth.js\";\nimport { gotoRoute } from \"../Router.js\";\nimport Toast from \"../Toast.js\";\nimport DOMPurify from \"dompurify\";\n\nclass HostGuideView {\n  async init() {\n    document.title = \"Welcome to Chinwag - Host\";\n    if (!Auth.currentUser || Auth.currentUser.accessLevel !== 2) {\n      gotoRoute(\"/signin\");\n      return;\n    }\n    this.render();\n  }\n\n  async handleGetStarted() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        `${App.apiBase}/users/${Auth.currentUser.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ isFirstLogin: false }),\n        }\n      );\n      if (!response.ok) throw new Error(\"Failed to update user\");\n      Auth.currentUser.isFirstLogin = false;\n      gotoRoute(\"/host-home\");\n    } catch (err) {\n      Toast.show(\"Error getting started\");\n      console.error(err);\n    }\n  }\n\n  render() {\n    const template = html`\n      <div class=\"guide-page\">\n        <div\n          class=\"guide-header\"\n          style=\"background-image: url('/images/guide-header.png')\"\n        ></div>\n        <div class=\"guide-content\">\n          <div class=\"guide-text-block\">\n            <h1 class=\"guide-title\">Welcome!</h1>\n            <p class=\"guide-subtitle\">\n              ${DOMPurify.sanitize(\n                \"We’re thrilled to have your venue on board. Chinwag is here to help you turn underused tables into new revenue — and make your space a destination for community.\"\n              )}\n            </p>\n            <h2 class=\"guide-heading\">What is Chinwag?</h2>\n            <p class=\"guide-text\">\n              ${DOMPurify.sanitize(\n                \"Chinwag is a social dining platform where people join communal tables at local venues. For you, it’s a low-effort way to increase bookings, especially during quiet periods.\"\n              )}\n            </p>\n          </div>\n          <div class=\"guide-features\">\n            <sl-card class=\"guide-card\">\n              <h4>📅 Fill seats</h4>\n              <p>Boost off-peak bookings with communal tables.</p>\n            </sl-card>\n            <sl-card class=\"guide-card\">\n              <h4>🛠️ List in seconds</h4>\n              <p>Duplicate past events to post in seconds.</p>\n            </sl-card>\n            <sl-card class=\"guide-card\">\n              <h4>📊 Reach a new audience</h4>\n              <p>Attract spontaneous diners and social groups.</p>\n            </sl-card>\n          </div>\n          <div class=\"guide-cta\">\n            <sl-button\n              variant=\"primary\"\n              size=\"large\"\n              @click=${this.handleGetStarted.bind(this)}\n              aria-label=\"Get Started as a Host\"\n            >\n              Get Started\n            </sl-button>\n          </div>\n        </div>\n        <div\n          class=\"guide-footer\"\n          style=\"background-image: url('/images/guide-footer.png')\"\n        ></div>\n      </div>\n    `;\n    render(template, App.rootEl);\n  }\n}\n\nexport default new HostGuideView();\n","// views/profile.js\n\nimport { html, render } from \"lit-html\";\nimport App from \"../App.js\";\nimport Auth from \"../Auth.js\";\nimport Toast from \"../Toast.js\";\nimport DOMPurify from \"dompurify\";\nimport Header from \"../components/Header.js\";\n\nclass ProfileView {\n  constructor() {\n    this.user = null;\n    this.loading = true;\n    this.saving = false;\n    this.passwordMismatch = false;\n    this.showPasswordDialog = false;\n    this.avatarPreview = null;\n  }\n\n  init() {\n    document.title = \"Profile - Chinwag\";\n    this.fetchUser();\n  }\n\n  async fetchUser() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        `${App.apiBase}/users/${Auth.currentUser.id}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      if (!response.ok) throw new Error(\"Failed to fetch profile\");\n      this.user = await response.json();\n      this.avatarPreview = this.user.avatar.startsWith(\"/uploads\")\n        ? `${App.apiBase}${this.user.avatar}`\n        : \"/images/default-avatar.png\";\n      this.loading = false;\n      this.render();\n    } catch (err) {\n      this.loading = false;\n      Toast.show(\"Error fetching profile\");\n      console.error(err);\n      this.render();\n    }\n  }\n\n  handleAvatarChange(e) {\n    const file = e.target.files[0];\n    if (file) {\n      this.avatarPreview = URL.createObjectURL(file);\n      this.render();\n    }\n  }\n\n  async submitHandler(e) {\n    e.preventDefault();\n    if (this.saving) return;\n    this.saving = true;\n    this.render();\n\n    const form = e.target;\n    const firstName = DOMPurify.sanitize(\n      form.querySelector('[name=\"firstName\"]').value.trim()\n    );\n    const lastName = DOMPurify.sanitize(\n      form.querySelector('[name=\"lastName\"]').value.trim()\n    );\n    const email = DOMPurify.sanitize(\n      form.querySelector('[name=\"email\"]').value.trim()\n    );\n    const bio = DOMPurify.sanitize(\n      form.querySelector('[name=\"bio\"]').value.trim()\n    );\n    const avatar = form.querySelector('[name=\"avatar\"]').files[0];\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const formData = new FormData();\n      formData.append(\"firstName\", firstName);\n      formData.append(\"lastName\", lastName);\n      formData.append(\"email\", email);\n      formData.append(\"bio\", bio);\n      if (avatar) formData.append(\"avatar\", avatar);\n\n      const response = await fetch(\n        `${App.apiBase}/users/${Auth.currentUser.id}`,\n        {\n          method: \"PUT\",\n          headers: { Authorization: `Bearer ${token}` },\n          body: formData,\n        }\n      );\n      if (!response.ok) throw new Error((await response.json()).message);\n\n      const updatedUser = await response.json();\n      Auth.currentUser = { ...Auth.currentUser, ...updatedUser };\n      this.user = updatedUser;\n      this.avatarPreview = updatedUser.avatar.startsWith(\"/uploads\")\n        ? `${App.apiBase}${updatedUser.avatar}`\n        : \"/images/default-avatar.png\";\n      this.saving = false;\n      Toast.show(\"Profile updated\");\n      this.render();\n    } catch (err) {\n      this.saving = false;\n      Toast.show(err.message || \"Failed to update profile\");\n      this.render();\n    }\n  }\n\n  async submitPasswordHandler(e) {\n    e.preventDefault();\n    this.passwordMismatch = false;\n\n    const form = e.target;\n    const currentPassword = form.querySelector(\n      '[name=\"currentPassword\"]'\n    ).value;\n    const newPassword = form.querySelector('[name=\"newPassword\"]').value;\n    const confirmPassword = form.querySelector(\n      '[name=\"confirmPassword\"]'\n    ).value;\n\n    if (newPassword !== confirmPassword) {\n      this.passwordMismatch = true;\n      this.render();\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        `${App.apiBase}/users/${Auth.currentUser.id}/password`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ currentPassword, newPassword }),\n        }\n      );\n      if (!response.ok) throw new Error((await response.json()).message);\n      this.showPasswordDialog = false;\n      Toast.show(\"Password updated\");\n      this.render();\n    } catch (err) {\n      Toast.show(err.message || \"Failed to update password\");\n      this.render();\n    }\n  }\n\n  render() {\n    const template = html`\n      <div>\n        ${Header.render()}\n        <div class=\"page-content\">\n          ${this.loading\n            ? html`<sl-spinner></sl-spinner>`\n            : html`\n                <h1>Your Profile</h1>\n                <div class=\"form-wrapper\">\n                  <form @submit=${this.submitHandler.bind(this)}>\n                    <div class=\"avatar-section\">\n                      <img\n                        src=\"${DOMPurify.sanitize(this.avatarPreview)}\"\n                        alt=\"Profile avatar\"\n                        class=\"avatar-preview\"\n                        @error=${(e) =>\n                          (e.target.src = \"/images/default-avatar.png\")}\n                        loading=\"lazy\"\n                      />\n                      <sl-input\n                        name=\"avatar\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                        @change=${this.handleAvatarChange.bind(this)}\n                        label=\"Upload Avatar\"\n                      ></sl-input>\n                    </div>\n                    <sl-input\n                      name=\"firstName\"\n                      label=\"First Name\"\n                      value=\"${DOMPurify.sanitize(this.user.firstName)}\"\n                      required\n                      autocomplete=\"given-name\"\n                    ></sl-input>\n                    <sl-input\n                      name=\"lastName\"\n                      label=\"Last Name\"\n                      value=\"${DOMPurify.sanitize(this.user.lastName)}\"\n                      required\n                      autocomplete=\"family-name\"\n                    ></sl-input>\n                    <sl-input\n                      name=\"email\"\n                      type=\"email\"\n                      label=\"Email\"\n                      value=\"${DOMPurify.sanitize(this.user.email)}\"\n                      required\n                      autocomplete=\"email\"\n                    ></sl-input>\n                    <sl-textarea\n                      name=\"bio\"\n                      label=\"Bio\"\n                      value=\"${DOMPurify.sanitize(this.user.bio)}\"\n                    ></sl-textarea>\n                    <sl-button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      ?disabled=${this.saving}\n                      ?loading=${this.saving}\n                    >\n                      Save Profile\n                    </sl-button>\n                    <sl-button\n                      variant=\"default\"\n                      @click=${() => {\n                        this.showPasswordDialog = true;\n                        this.render();\n                      }}\n                    >\n                      Change Password\n                    </sl-button>\n                  </form>\n                </div>\n                ${this.showPasswordDialog\n                  ? html`\n                      <sl-dialog\n                        label=\"Change Password\"\n                        open\n                        @sl-request-close=${() => {\n                          this.showPasswordDialog = false;\n                          this.render();\n                        }}\n                      >\n                        <form @submit=${this.submitPasswordHandler.bind(this)}>\n                          <sl-input\n                            name=\"currentPassword\"\n                            type=\"password\"\n                            label=\"Current Password\"\n                            required\n                            autocomplete=\"current-password\"\n                          ></sl-input>\n                          <sl-input\n                            name=\"newPassword\"\n                            type=\"password\"\n                            label=\"New Password\"\n                            required\n                            autocomplete=\"new-password\"\n                            help-text=${this.passwordMismatch\n                              ? \"Passwords do not match\"\n                              : \"\"}\n                            ?invalid=${this.passwordMismatch}\n                          ></sl-input>\n                          <sl-input\n                            name=\"confirmPassword\"\n                            type=\"password\"\n                            label=\"Confirm New Password\"\n                            required\n                            autocomplete=\"new-password\"\n                            help-text=${this.passwordMismatch\n                              ? \"Passwords do not match\"\n                              : \"\"}\n                            ?invalid=${this.passwordMismatch}\n                          ></sl-input>\n                          <sl-button\n                            slot=\"footer\"\n                            type=\"submit\"\n                            variant=\"primary\"\n                          >\n                            Update Password\n                          </sl-button>\n                          <sl-button\n                            slot=\"footer\"\n                            variant=\"default\"\n                            @click=${() => {\n                              this.showPasswordDialog = false;\n                              this.render();\n                            }}\n                          >\n                            Cancel\n                          </sl-button>\n                        </form>\n                      </sl-dialog>\n                    `\n                  : \"\"}\n              `}\n        </div>\n      </div>\n    `;\n    render(template, App.rootEl);\n  }\n}\n\nexport default new ProfileView();\n","// components/header.js\n\nimport { html } from \"lit-html\";\nimport Auth from \"../Auth.js\";\nimport { gotoRoute } from \"../Router.js\";\n\nconst Header = {\n  render() {\n    const isHost = Auth.currentUser?.accessLevel === 2;\n    return html`\n      <header class=\"site-header\">\n        <div class=\"header-content\">\n          <h1\n            class=\"logo\"\n            @click=${() => gotoRoute(isHost ? \"/host-home\" : \"/guest-home\")}\n          >\n            Chinwag\n          </h1>\n          <sl-tab-group class=\"nav-tabs\">\n            <sl-tab\n              slot=\"nav\"\n              panel=\"home\"\n              @click=${() => gotoRoute(isHost ? \"/host-home\" : \"/guest-home\")}\n            >\n              Home\n            </sl-tab>\n            <sl-tab\n              slot=\"nav\"\n              panel=\"bookings\"\n              @click=${() =>\n                gotoRoute(isHost ? \"/host-bookings\" : \"/guest-bookings\")}\n            >\n              Bookings\n            </sl-tab>\n            <sl-tab\n              slot=\"nav\"\n              panel=\"profile\"\n              @click=${() => gotoRoute(\"/profile\")}\n            >\n              Profile\n            </sl-tab>\n            <sl-tab slot=\"nav\" panel=\"logout\" @click=${() => Auth.signOut()}>\n              Logout\n            </sl-tab>\n          </sl-tab-group>\n        </div>\n      </header>\n    `;\n  },\n};\n\nexport default Header;\n","// views/GuestHome.js\n\nimport { html, render } from \"lit-html\";\nimport App from \"../App.js\";\nimport Auth from \"../Auth.js\";\nimport Toast from \"../Toast.js\";\nimport DOMPurify from \"dompurify\";\nimport Header from \"../components/Header.js\";\n\nclass GuestHomeView {\n  constructor() {\n    this.events = [];\n    this.filter = \"all\";\n  }\n\n  init() {\n    document.title = \"Guest Home\";\n    this.fetchEvents();\n    this.handleTabChange = this.handleTabChange.bind(this);\n  }\n\n  async fetchEvents() {\n    try {\n      const query = this.filter === \"all\" ? \"\" : `?dateRange=${this.filter}`;\n      const response = await fetch(`${App.apiBase}/events${query}`);\n      if (!response.ok) throw new Error(\"Failed to fetch events\");\n      this.events = await response.json();\n      this.render();\n    } catch (err) {\n      Toast.show(\"Error fetching events\");\n      console.error(err);\n    }\n  }\n\n  handleTabChange(e) {\n    this.filter = e.target.panel;\n    this.fetchEvents();\n  }\n\n  async bookEvent(eventId) {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${App.apiBase}/bookings`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ eventId }),\n      });\n      if (!response.ok) throw new Error((await response.json()).message);\n      Toast.show(\"Event booked!\");\n      this.fetchEvents();\n    } catch (err) {\n      Toast.show(err.message || \"Booking failed\");\n      console.error(err);\n    }\n  }\n\n  render() {\n    const template = html`\n      <div>\n        ${Header.render()}\n        <div class=\"page-content\">\n          <h1>Available Events</h1>\n          <div class=\"carousel-container\">\n            <sl-tab-group @sl-tab-show=${this.handleTabChange}>\n              <sl-tab slot=\"nav\" panel=\"all\" active>All</sl-tab>\n              <sl-tab slot=\"nav\" panel=\"weekend\">This Weekend</sl-tab>\n              <sl-tab slot=\"nav\" panel=\"nextWeek\">Next Week</sl-tab>\n            </sl-tab-group>\n            <sl-carousel navigation pagination>\n              ${this.events.map(\n                (event) => html`\n                  <sl-carousel-item>\n                    <div class=\"event-card\">\n                      <img\n                        src=\"${DOMPurify.sanitize(event.image)}\"\n                        alt=\"${DOMPurify.sanitize(event.title)}\"\n                        width=\"300\"\n                      />\n                      <h2>${DOMPurify.sanitize(event.title)}</h2>\n                      <p>${DOMPurify.sanitize(event.description)}</p>\n                      <p>Date: ${new Date(event.date).toLocaleString()}</p>\n                      <p>Location: ${DOMPurify.sanitize(event.location)}</p>\n                      <p>Seats Available: ${event.seatsAvailable}</p>\n                      <p>\n                        Host: ${DOMPurify.sanitize(event.host.firstName)}\n                        ${DOMPurify.sanitize(event.host.lastName)}\n                      </p>\n                      <sl-button\n                        @click=${() => this.bookEvent(event._id)}\n                        variant=\"primary\"\n                        ?disabled=${event.seatsAvailable === 0}\n                      >\n                        Book Event\n                      </sl-button>\n                    </div>\n                  </sl-carousel-item>\n                `\n              )}\n            </sl-carousel>\n          </div>\n        </div>\n      </div>\n    `;\n    render(template, App.rootEl);\n  }\n}\n\nexport default new GuestHomeView();\n","// views/hosthome.js\n\nimport { html, render } from \"lit-html\";\nimport App from \"../App.js\";\nimport Auth from \"../Auth.js\";\nimport Toast from \"../Toast.js\";\nimport DOMPurify from \"dompurify\";\nimport { gotoRoute } from \"../Router.js\";\n\nclass HostHomeView {\n  constructor() {\n    this.events = [];\n  }\n\n  init() {\n    document.title = \"Host Home\";\n    this.fetchEvents();\n    this.submitHandler = this.submitHandler.bind(this);\n    this.imageHandler = this.imageHandler.bind(this);\n  }\n\n  async fetchEvents() {\n    try {\n      const response = await fetch(\n        `${App.apiBase}/events?host=${Auth.currentUser.id}`\n      );\n      if (!response.ok) throw new Error(\"Failed to fetch events\");\n      this.events = await response.json();\n      this.render();\n    } catch (err) {\n      Toast.show(\"Error fetching events\");\n      console.error(err);\n    }\n  }\n\n  async submitHandler(e) {\n    e.preventDefault();\n    const form = e.target;\n    const title = DOMPurify.sanitize(\n      form.querySelector('[name=\"title\"]').value\n    );\n    const description = DOMPurify.sanitize(\n      form.querySelector('[name=\"description\"]').value\n    );\n    const date = DOMPurify.sanitize(form.querySelector('[name=\"date\"]').value);\n    const location = DOMPurify.sanitize(\n      form.querySelector('[name=\"location\"]').value\n    );\n    const image = form.querySelector('[name=\"image\"]').files[0];\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"description\", description);\n      formData.append(\"date\", date);\n      formData.append(\"location\", location);\n      if (image) formData.append(\"image\", image);\n\n      const response = await fetch(`${App.apiBase}/events`, {\n        method: \"POST\",\n        headers: { Authorization: `Bearer ${token}` },\n        body: formData,\n      });\n      if (!response.ok) throw new Error(await response.json().message);\n      Toast.show(\"Event created!\");\n      this.fetchEvents();\n    } catch (err) {\n      Toast.show(err.message || \"Event creation failed\");\n      console.error(err);\n    }\n  }\n\n  async deleteEvent(eventId) {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${App.apiBase}/events/${eventId}`, {\n        method: \"DELETE\",\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (!response.ok) throw new Error(await response.json().message);\n      Toast.show(\"Event deleted\");\n      this.fetchEvents();\n    } catch (err) {\n      Toast.show(err.message || \"Deletion failed\");\n      console.error(err);\n    }\n  }\n\n  render() {\n    const template = html`\n      <div class=\"page-content\">\n        <h1>Your Events</h1>\n        <form @submit=${this.submitHandler}>\n          <sl-input name=\"title\" label=\"Event Title\" required></sl-input>\n          <sl-textarea\n            name=\"description\"\n            label=\"Description\"\n            required\n          ></sl-textarea>\n          <sl-input\n            name=\"date\"\n            type=\"datetime-local\"\n            label=\"Date and Time\"\n            required\n          ></sl-input>\n          <sl-input name=\"location\" label=\"Location\" required></sl-input>\n          <input type=\"file\" name=\"image\" accept=\"image/*\" />\n          <sl-button type=\"submit\" variant=\"primary\">Create Event</sl-button>\n        </form>\n        <h2>Existing Events</h2>\n        ${this.events.map(\n          (event) => html`\n            <div class=\"event-card\">\n              <img\n                src=\"${DOMPurify.sanitize(event.image)}\"\n                alt=\"${event.title}\"\n                width=\"300\"\n              />\n              <h3>${DOMPurify.sanitize(event.title)}</h3>\n              <p>${DOMPurify.sanitize(event.description)}</p>\n              <p>Date: ${new Date(event.date).toLocaleString()}</p>\n              <p>Location: ${DOMPurify.sanitize(event.location)}</p>\n              <sl-button\n                @click=${() => this.deleteEvent(event._id)}\n                variant=\"danger\"\n                >Delete</sl-button\n              >\n            </div>\n          `\n        )}\n      </div>\n    `;\n    render(template, App.rootEl);\n  }\n}\n\nexport default new HostHomeView();\n","// views/GuestBookings.js\n\nimport { html, render } from \"lit-html\";\nimport App from \"../App.js\";\nimport Auth from \"../Auth.js\";\nimport Toast from \"../Toast.js\";\nimport DOMPurify from \"dompurify\";\nimport Header from \"../components/Header.js\";\n\nclass GuestBookingsView {\n  constructor() {\n    this.bookings = [];\n    this.loading = true;\n    this.activeFilter = \"Upcoming\";\n    this.cancellingBookingId = null;\n  }\n\n  init() {\n    document.title = \"Your Bookings - Chinwag\";\n    this.fetchBookings();\n  }\n\n  async fetchBookings() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${App.apiBase}/bookings/guest`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch bookings\");\n      this.bookings = await response.json();\n      this.loading = false;\n      this.render();\n    } catch (err) {\n      this.loading = false;\n      Toast.show(\"Error fetching bookings\");\n      console.error(err);\n      this.render();\n    }\n  }\n\n  handleTabClick(e) {\n    this.activeFilter = e.target.panel;\n    this.render();\n  }\n\n  async cancelBooking(bookingId) {\n    this.cancellingBookingId = bookingId;\n    this.render();\n  }\n\n  async confirmCancel(bookingId) {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        `${App.apiBase}/bookings/${bookingId}/cancel`,\n        {\n          method: \"PUT\",\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      if (!response.ok) throw new Error(\"Failed to cancel booking\");\n      Toast.show(\"Booking cancelled\");\n      this.cancellingBookingId = null;\n      this.fetchBookings();\n    } catch (err) {\n      Toast.show(err.message || \"Failed to cancel booking\");\n      console.error(err);\n      this.cancellingBookingId = null;\n      this.render();\n    }\n  }\n\n  getFilteredBookings() {\n    const now = new Date();\n    return this.bookings.filter((booking) =>\n      this.activeFilter === \"Upcoming\"\n        ? new Date(booking.event.date) >= now && booking.status === \"confirmed\"\n        : new Date(booking.event.date) < now || booking.status === \"cancelled\"\n    );\n  }\n\n  render() {\n    const filteredBookings = this.getFilteredBookings();\n    const template = html`\n      <div>\n        ${Header.render()}\n        <div class=\"page-content\">\n          <h1>Your Bookings</h1>\n          <sl-tab-group @sl-tab-show=${this.handleTabClick.bind(this)}>\n            <sl-tab slot=\"nav\" panel=\"Upcoming\" active>Upcoming</sl-tab>\n            <sl-tab slot=\"nav\" panel=\"Past\">Past</sl-tab>\n          </sl-tab-group>\n          ${this.loading\n            ? html`<sl-spinner></sl-spinner>`\n            : filteredBookings.length === 0\n            ? html`<p>No ${this.activeFilter.toLowerCase()} bookings found.</p>`\n            : html`\n                <div class=\"booking-grid\">\n                  ${filteredBookings.map(\n                    (booking) => html`\n                      <sl-card class=\"booking-card\">\n                        <img\n                          slot=\"image\"\n                          src=\"${DOMPurify.sanitize(\n                            booking.event.image.startsWith(\"/uploads\")\n                              ? `${App.apiBase}${booking.event.image}`\n                              : `/images/default-event.png`\n                          )}\"\n                          alt=\"${DOMPurify.sanitize(booking.event.title)}\"\n                          @error=${(e) =>\n                            (e.target.src = `/images/default-event.png`)}\n                          loading=\"lazy\"\n                        />\n                        <h3>${DOMPurify.sanitize(booking.event.title)}</h3>\n                        <p>\n                          <strong>Date:</strong>\n                          ${new Date(booking.event.date).toLocaleString()}\n                        </p>\n                        <p>\n                          <strong>Location:</strong>\n                          ${DOMPurify.sanitize(booking.event.location)}\n                        </p>\n                        <p>\n                          <strong>Status:</strong>\n                          ${DOMPurify.sanitize(booking.status)}\n                        </p>\n                        <p>\n                          <strong>Host:</strong>\n                          ${DOMPurify.sanitize(\n                            `${booking.event.host.firstName} ${booking.event.host.lastName}`\n                          )}\n                        </p>\n                        <p>\n                          <strong>Host Email:</strong>\n                          ${DOMPurify.sanitize(booking.event.host.email)}\n                        </p>\n                        <div slot=\"footer\">\n                          <sl-button\n                            variant=\"primary\"\n                            @click=${() =>\n                              window.open(`mailto:${booking.event.host.email}`)}\n                            aria-label=\"Contact Host\"\n                          >\n                            Contact Host\n                          </sl-button>\n                          ${booking.status === \"confirmed\"\n                            ? html`\n                                <sl-button\n                                  variant=\"danger\"\n                                  @click=${() =>\n                                    this.cancelBooking(booking._id)}\n                                  aria-label=\"Cancel Booking\"\n                                >\n                                  Cancel Booking\n                                </sl-button>\n                              `\n                            : \"\"}\n                        </div>\n                      </sl-card>\n                    `\n                  )}\n                </div>\n              `}\n          ${this.cancellingBookingId\n            ? html`\n                <sl-dialog label=\"Confirm Cancellation\" open>\n                  <p>Are you sure you want to cancel this booking?</p>\n                  <sl-button\n                    slot=\"footer\"\n                    variant=\"primary\"\n                    @click=${() => this.confirmCancel(this.cancellingBookingId)}\n                  >\n                    Confirm\n                  </sl-button>\n                  <sl-button\n                    slot=\"footer\"\n                    variant=\"default\"\n                    @click=${() => {\n                      this.cancellingBookingId = null;\n                      this.render();\n                    }}\n                  >\n                    Cancel\n                  </sl-button>\n                </sl-dialog>\n              `\n            : \"\"}\n        </div>\n      </div>\n    `;\n    render(template, App.rootEl);\n  }\n}\n\nexport default new GuestBookingsView();\n","// views/HostBookings.js\n\nimport { html, render } from \"lit-html\";\nimport App from \"../App.js\";\nimport Auth from \"../Auth.js\";\nimport Toast from \"../Toast.js\";\nimport DOMPurify from \"dompurify\";\nimport Header from \"../components/Header.js\";\n\nclass HostBookingsView {\n  constructor() {\n    this.bookings = [];\n    this.loading = true;\n    this.removingBookingId = null;\n  }\n\n  init() {\n    document.title = \"Host Bookings - Chinwag\";\n    this.fetchBookings();\n  }\n\n  async fetchBookings() {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`${App.apiBase}/bookings/host`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch bookings\");\n      this.bookings = await response.json();\n      this.loading = false;\n      this.render();\n    } catch (err) {\n      this.loading = false;\n      Toast.show(\"Error fetching bookings\");\n      console.error(err);\n      this.render();\n    }\n  }\n\n  async updateNote(bookingId, notes) {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        `${App.apiBase}/bookings/${bookingId}/notes`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ notes: DOMPurify.sanitize(notes) }),\n        }\n      );\n      if (!response.ok) throw new Error(\"Failed to update notes\");\n      Toast.show(\"Notes updated\");\n      this.fetchBookings();\n    } catch (err) {\n      Toast.show(err.message || \"Failed to update notes\");\n      console.error(err);\n    }\n  }\n\n  async removeBooking(bookingId) {\n    this.removingBookingId = bookingId;\n    this.render();\n  }\n\n  async confirmRemove(bookingId) {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\n        `${App.apiBase}/bookings/${bookingId}/cancel`,\n        {\n          method: \"PUT\",\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      if (!response.ok) throw new Error(\"Failed to remove booking\");\n      Toast.show(\"Booking removed\");\n      this.removingBookingId = null;\n      this.fetchBookings();\n    } catch (err) {\n      Toast.show(err.message || \"Failed to remove booking\");\n      console.error(err);\n      this.removingBookingId = null;\n      this.render();\n    }\n  }\n\n  groupBookingsByEvent() {\n    const events = {};\n    this.bookings.forEach((booking) => {\n      const eventId = booking.event._id;\n      if (!events[eventId]) {\n        events[eventId] = {\n          event: booking.event,\n          bookings: [],\n        };\n      }\n      events[eventId].bookings.push(booking);\n    });\n    return Object.values(events);\n  }\n\n  render() {\n    const eventGroups = this.groupBookingsByEvent();\n    const template = html`\n      <div>\n        ${Header.render()}\n        <div class=\"page-content\">\n          <h1>Your Event Bookings</h1>\n          ${this.loading\n            ? html`<sl-spinner></sl-spinner>`\n            : eventGroups.length === 0\n            ? html`<p>No bookings found for your events.</p>`\n            : eventGroups.map(\n                ({ event, bookings }) => html`\n                  <div class=\"event-section\">\n                    <h2>${DOMPurify.sanitize(event.title)}</h2>\n                    <div class=\"booking-grid\">\n                      ${bookings.map(\n                        (booking) => html`\n                          <sl-card class=\"booking-card\">\n                            <div slot=\"header\">\n                              <img\n                                src=\"${DOMPurify.sanitize(\n                                  booking.guest.avatar.startsWith(\"/uploads\")\n                                    ? `${App.apiBase}${booking.guest.avatar}`\n                                    : `/images/default-avatar.png`\n                                )}\"\n                                alt=\"Avatar for ${DOMPurify.sanitize(\n                                  booking.guest.firstName\n                                )}\"\n                                class=\"avatar\"\n                                @error=${(e) =>\n                                  (e.target.src = `/images/default-avatar.png`)}\n                                loading=\"lazy\"\n                              />\n                              <span\n                                >${DOMPurify.sanitize(\n                                  `${booking.guest.firstName} ${booking.guest.lastName}`\n                                )}</span\n                              >\n                            </div>\n                            <div>\n                              <strong>Email:</strong>\n                              ${DOMPurify.sanitize(booking.guest.email)}\n                            </div>\n                            <div>\n                              <strong>Notes:</strong>\n                              <sl-input\n                                value=\"${DOMPurify.sanitize(\n                                  booking.hostNotes || \"\"\n                                )}\"\n                                @sl-change=${(e) =>\n                                  this.updateNote(booking._id, e.target.value)}\n                              ></sl-input>\n                            </div>\n                            <div slot=\"footer\">\n                              <sl-button\n                                variant=\"danger\"\n                                @click=${() => this.removeBooking(booking._id)}\n                                aria-label=\"Remove ${DOMPurify.sanitize(\n                                  booking.guest.firstName\n                                )}\"\n                              >\n                                Remove\n                              </sl-button>\n                            </div>\n                          </sl-card>\n                        `\n                      )}\n                    </div>\n                  </div>\n                `\n              )}\n          ${this.removingBookingId\n            ? html`\n                <sl-dialog label=\"Confirm Removal\" open>\n                  <p>Are you sure you want to remove this guest?</p>\n                  <sl-button\n                    slot=\"footer\"\n                    variant=\"primary\"\n                    @click=${() => this.confirmRemove(this.removingBookingId)}\n                  >\n                    Confirm\n                  </sl-button>\n                  <sl-button\n                    slot=\"footer\"\n                    variant=\"default\"\n                    @click=${() => {\n                      this.removingBookingId = null;\n                      this.render();\n                    }}\n                  >\n                    Cancel\n                  </sl-button>\n                </sl-dialog>\n              `\n            : \"\"}\n        </div>\n      </div>\n    `;\n    render(template, App.rootEl);\n  }\n}\n\nexport default new HostBookingsView();\n"],"names":["global","globalThis","trustedTypes","policy","createPolicy","createHTML","s","undefined","boundAttributeSuffix","marker","Math","random","toFixed","slice","markerMatch","nodeMarker","d","document","createMarker","createComment","isPrimitive","value","isArray","Array","isIterable","Symbol","iterator","SPACE_CHAR","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","RegExp","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","tag","type","strings","values","_$litType$","html","svg","mathml","noChange","for","nothing","templateCache","WeakMap","walker","createTreeWalker","trustFromTemplateString","tsa","stringFromTSA","hasOwnProperty","Error","getTemplateHtml","l","length","attrNames","rawTextEndRegex","regex","i","attrName","match","attrNameEndIndex","lastIndex","exec","test","end","startsWith","push","Template","constructor","options","node","this","parts","nodeIndex","attrNameIndex","partCount","el","createElement","currentNode","content","wrapper","firstChild","replaceWith","childNodes","nextNode","nodeType","hasAttributes","name","getAttributeNames","endsWith","realName","statics","getAttribute","split","m","index","ctor","PropertyPart","BooleanAttributePart","EventPart","AttributePart","removeAttribute","tagName","textContent","emptyScript","append","data","indexOf","_options","innerHTML","resolveDirective","part","parent","attributeIndex","currentDirective","__directives","__directive","nextDirectiveConstructor","_$initialize","_$resolve","TemplateInstance","template","_$parts","_$disconnectableChildren","_$template","_$parent","parentNode","_$isConnected","_clone","fragment","creationScope","importNode","partIndex","templatePart","ChildPart","nextSibling","ElementPart","_update","_$setValue","__isConnected","startNode","endNode","_$committedValue","_$startNode","_$endNode","isConnected","directiveParent","_$clear","_commitText","_commitTemplateResult","_commitNode","_commitIterable","_insert","insertBefore","createTextNode","result","_$getTemplate","h","instance","get","set","itemParts","itemPart","item","start","from","_$notifyConnectionChanged","n","remove","setConnected","element","fill","String","valueIndex","noCommit","change","v","_commitValue","setAttribute","toggleAttribute","super","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","removeEventListener","addEventListener","handleEvent","event","call","host","_$LH","_boundAttributeSuffix","_marker","_markerMatch","_HTML_RESULT","_getTemplateHtml","_TemplateInstance","_isIterable","_resolveDirective","_ChildPart","_AttributePart","_BooleanAttributePart","_EventPart","_PropertyPart","_ElementPart","polyfillSupport","litHtmlPolyfillSupport","litHtmlVersions","render","container","partOwnerNode","renderBefore","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","prototype","forEach","arrayLastIndexOf","lastIndexOf","arrayPop","pop","arrayPush","arraySplice","splice","stringToLowerCase","toLowerCase","stringToString","toString","stringMatch","stringReplace","replace","stringIndexOf","stringTrim","trim","objectHasOwnProperty","regExpTest","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","array","transformCaseFunc","lcElement","cleanArray","isPropertyExist","clone","object","newObject","property","lookupGetter","prop","desc","fallbackValue","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","NODE_TYPE","attribute","cdataSection","entityReference","entityNode","progressingInstruction","comment","documentType","documentFragment","notation","getGlobal","window","_createTrustedTypesPolicy","purifyHostElement","suffix","ATTR_NAME","hasAttribute","policyName","createScriptURL","scriptUrl","_","console","warn","_createHooksMap","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createDOMPurify","DOMPurify","root","version","VERSION","removed","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","hooks","createHTMLDocument","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","namespaceURI","parentTagName","Boolean","_forceRemove","removeChild","_removeAttribute","getAttributeNode","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","body","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","attributes","hasChildNodes","_isNode","_executeHooks","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","childCount","childClone","__removalCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrValue","keepAttr","allowedAttributes","forceKeepAttr","attr","initValue","getAttributeType","setAttributeNS","_sanitizeShadowDOM","shadowNode","shadowIterator","sanitize","importedNode","returnNode","appendChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks"],"version":3,"file":"frontend.1fcc916e.js.map","sourceRoot":"/__parcel_source_root/"}